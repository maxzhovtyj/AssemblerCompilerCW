.486
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|.486								|		4		|directive					|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	0	|	0	|	0			|	0		|
=========================================================================================

Data1 segment use16
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|data1								|		5		|data segment				|
|	2	|segment							|		7		|segment directive			|
|	3	|use16								|		5		|segment encoding			|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	1	|	3			|	1		|
=========================================================================================

String db 'String'
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|string								|		6		|user identifier			|
|	2	|db									|		2		|type byte					|
|	3	|'string'							|		8		|string						|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		2			|		1		|	3	|	1	|	0			|	0		|
=========================================================================================

Val db 101b
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|val								|		3		|user identifier			|
|	2	|db									|		2		|type byte					|
|	3	|101b								|		4		|binary						|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		2			|		1		|	3	|	1	|	0			|	0		|
=========================================================================================

Vw dw 1234d
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|vw									|		2		|user identifier			|
|	2	|dw									|		2		|type 2 bytes				|
|	3	|1234d								|		5		|decimal					|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		2			|		1		|	3	|	1	|	0			|	0		|
=========================================================================================

Vd dd 0d7856fdah
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|vd									|		2		|user identifier			|
|	2	|dd									|		2		|type 4 bytes				|
|	3	|0d7856fdah							|		10		|hexadecimal				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		2			|		1		|	3	|	1	|	0			|	0		|
=========================================================================================

Data1 ends
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|data1								|		5		|data segment				|
|	2	|ends								|		4		|end of segment				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	1	|	0			|	0		|
=========================================================================================

Data2 segment use16
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|data2								|		5		|data segment				|
|	2	|segment							|		7		|segment directive			|
|	3	|use16								|		5		|segment encoding			|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	1	|	3			|	1		|
=========================================================================================

Var dw 123
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|var								|		3		|user identifier			|
|	2	|dw									|		2		|type 2 bytes				|
|	3	|123								|		3		|decimal					|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		2			|		1		|	3	|	1	|	0			|	0		|
=========================================================================================

QWERTY dd 67ff89h
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|qwerty								|		6		|user identifier			|
|	2	|dd									|		2		|type 4 bytes				|
|	3	|67ff89h							|		7		|hexadecimal				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		2			|		1		|	3	|	1	|	0			|	0		|
=========================================================================================

Zxcv db 89h
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|zxcv								|		4		|user identifier			|
|	2	|db									|		2		|type byte					|
|	3	|89h								|		3		|hexadecimal				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		2			|		1		|	3	|	1	|	0			|	0		|
=========================================================================================

Data2 ends
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|data2								|		5		|data segment				|
|	2	|ends								|		4		|end of segment				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	1	|	0			|	0		|
=========================================================================================

Code1 segment use16
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|code1								|		5		|code segment				|
|	2	|segment							|		7		|segment directive			|
|	3	|use16								|		5		|segment encoding			|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	1	|	3			|	1		|
=========================================================================================

Assume cs : Code1 , ds : Data1 , gs : Data2
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|assume								|		6		|assume						|
|	2	|cs									|		2		|segment register			|
|	3	|:									|		1		|character					|
|	4	|code1								|		5		|code segment				|
|	5	|,									|		1		|character					|
|	6	|ds									|		2		|segment register			|
|	7	|:									|		1		|character					|
|	8	|data1								|		5		|data segment				|
|	9	|,									|		1		|character					|
|	10	|gs									|		2		|segment register			|
|	11	|:									|		1		|character					|
|	12	|data2								|		5		|data segment				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		0			|		0		|	0	|	0	|	0			|	0		|
=========================================================================================

begin :
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|begin								|		5		|user identifier			|
|	2	|:									|		1		|character					|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		0			|		0		|	0	|	0	|	0			|	0		|
=========================================================================================

nop
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|nop								|		3		|instruction				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	0	|	0	|	0			|	0		|
=========================================================================================

nop
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|nop								|		3		|instruction				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	0	|	0	|	0			|	0		|
=========================================================================================

nop
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|nop								|		3		|instruction				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	0	|	0	|	0			|	0		|
=========================================================================================

imul bl
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|imul								|		4		|instruction				|
|	2	|bl									|		2		|8-bit register				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	1	|	0			|	0		|
=========================================================================================

mul byte ptr gs : [ ebx + ecx ]
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|mul								|		3		|instruction				|
|	2	|byte								|		4		|identifier type byte		|
|	3	|ptr								|		3		|identifier type definition	|
|	4	|gs									|		2		|segment register			|
|	5	|:									|		1		|character					|
|	6	|[									|		1		|character					|
|	7	|ebx								|		3		|32-bit address register	|
|	8	|+									|		1		|character					|
|	9	|ecx								|		3		|32-bit address register	|
|	10	|]									|		1		|character					|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	9	|	0			|	0		|
=========================================================================================

idiv bl
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|idiv								|		4		|instruction				|
|	2	|bl									|		2		|8-bit register				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	1	|	0			|	0		|
=========================================================================================

or byte ptr ds : [ edx + esi ] , 111b
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|or									|		2		|instruction				|
|	2	|byte								|		4		|identifier type byte		|
|	3	|ptr								|		3		|identifier type definition	|
|	4	|ds									|		2		|segment register			|
|	5	|:									|		1		|character					|
|	6	|[									|		1		|character					|
|	7	|edx								|		3		|32-bit address register	|
|	8	|+									|		1		|character					|
|	9	|esi								|		3		|general purpose registers	|
|	10	|]									|		1		|character					|
|	11	|,									|		1		|character					|
|	12	|111b								|		4		|binary						|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	9	|	12			|	1		|
=========================================================================================

sub dword ptr [ ebx + ecx ] , eax
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|sub								|		3		|instruction				|
|	2	|dword								|		5		|identifier type 4 bytes	|
|	3	|ptr								|		3		|identifier type definition	|
|	4	|[									|		1		|character					|
|	5	|ebx								|		3		|32-bit address register	|
|	6	|+									|		1		|character					|
|	7	|ecx								|		3		|32-bit address register	|
|	8	|]									|		1		|character					|
|	9	|,									|		1		|character					|
|	10	|eax								|		3		|32-bit data register		|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	7	|	10			|	1		|
=========================================================================================

cmp eax , gs : QWERTY
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|cmp								|		3		|instruction				|
|	2	|eax								|		3		|32-bit data register		|
|	3	|,									|		1		|character					|
|	4	|gs									|		2		|segment register			|
|	5	|:									|		1		|character					|
|	6	|qwerty								|		6		|user identifier			|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		1			|		1		|	2	|	1	|	0			|	0		|
=========================================================================================

Jmp short label1
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|jmp								|		3		|instruction				|
|	2	|short								|		5		|distance definition		|
|	3	|label1								|		6		|user identifier			|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		1			|		1		|	2	|	1	|	0			|	0		|
=========================================================================================

label1 :
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|label1								|		6		|user identifier			|
|	2	|:									|		1		|character					|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		0			|		0		|	0	|	0	|	0			|	0		|
=========================================================================================

cmp al , String
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|cmp								|		3		|instruction				|
|	2	|al									|		2		|8-bit register				|
|	3	|,									|		1		|character					|
|	4	|string								|		6		|user identifier			|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		1			|		1		|	2	|	1	|	0			|	0		|
=========================================================================================

jnb short label2
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|jnb								|		3		|instruction				|
|	2	|short								|		5		|distance definition		|
|	3	|label2								|		6		|user identifier			|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		1			|		1		|	2	|	1	|	0			|	0		|
=========================================================================================

adc al , byte ptr [ edx + esi ]
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|adc								|		3		|instruction				|
|	2	|al									|		2		|8-bit register				|
|	3	|,									|		1		|character					|
|	4	|byte								|		4		|identifier type byte		|
|	5	|ptr								|		3		|identifier type definition	|
|	6	|[									|		1		|character					|
|	7	|edx								|		3		|32-bit address register	|
|	8	|+									|		1		|character					|
|	9	|esi								|		3		|general purpose registers	|
|	10	|]									|		1		|character					|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	1	|	4			|	7		|
=========================================================================================

jmp label1
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|jmp								|		3		|instruction				|
|	2	|label1								|		6		|user identifier			|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		1			|		1		|	0	|	0	|	0			|	0		|
=========================================================================================

label2 :
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|label2								|		6		|user identifier			|
|	2	|:									|		1		|character					|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		0			|		0		|	0	|	0	|	0			|	0		|
=========================================================================================

cmp al , bl
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|cmp								|		3		|instruction				|
|	2	|al									|		2		|8-bit register				|
|	3	|,									|		1		|character					|
|	4	|bl									|		2		|8-bit register				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	1	|	4			|	1		|
=========================================================================================

jnb label2
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|jnb								|		3		|instruction				|
|	2	|label2								|		6		|user identifier			|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		1			|		1		|	0	|	0	|	0			|	0		|
=========================================================================================

nop
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|nop								|		3		|instruction				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	0	|	0	|	0			|	0		|
=========================================================================================

nop
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|nop								|		3		|instruction				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	0	|	0	|	0			|	0		|
=========================================================================================

Code1 ends
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|code1								|		5		|code segment				|
|	2	|ends								|		4		|end of segment				|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	0	|		1			|		1		|	2	|	1	|	0			|	0		|
=========================================================================================

end begin
=========================================================================================
|	No	|			Lexeme					|	Length		|		Type				|
=========================================================================================
|	1	|end								|		3		|end directive				|
|	2	|begin								|		5		|user identifier			|
=========================================================================================
| Label |			Mnemonic code			|	Operand 1	|		Operand 2			|
=========================================================================================
|	1	|		1			|		1		|	0	|	0	|	0			|	0		|
=========================================================================================


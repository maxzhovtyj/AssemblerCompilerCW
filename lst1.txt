Assembly translator STEP 1
Written by Zhovtaniuk Maksym KV-03
Filename: lst1.txt
1-line, 2-address, 3-size, 4-assembly operator

000		0000		0		Data1 segment
001		0000		5		String db 'Hello'
002		0005		1		Val db 101b
003		0006		2		Vw dw 1234d
004		0008		4		Vd dd 0d7856fdah
005		000C		0		Data1 ends

006		0000		0		Data2 segment
007		0000		2		Var dw 123
008		0002		4		QWERTY dd 67ff89h
009		0006		1		Zxcv db 89h
010		0007		0		Data2 ends

011		0000		0		Code1 segment
012		0000		0		Assume cs : Code1 , ds : Data1 , gs : Data2
013		0000		0		begin :
014		0000		1		nop
015		0001		1		nop
016		0002		1		nop
017		0003		2		imul eax
018		0005		4		mul byte ptr gs : [ ebx + ecx ]
019		0009		2		idiv bl
020		000B		4		or byte ptr ds : [ edx + esi ] , 111b
021		000F		3		sub dword ptr [ ebx + ecx ] , eax
022		0012		5		cmp eax , 01A2h
023		0017		2		jmp short label1
024		0019		0		label1 :
025		0019		6		cmp ebx , 'text'
026		001F		3		adc al , byte ptr [ edx + esi ]
027		0022		2		jmp label1
028		0024		0		label2 :
029		0024		2		cmp al , 111b
030		0026		1		nop
031		0027		1		nop
032		0028		0		Code1 ends

033		0000		0		end

Segment	Size
DATA1	000C
DATA2	0007
CODE1	0028

Errors: 0
Assembly translator STEP 1
Written by Zhovtaniuk Maksym KV-03
Filename: lst1.txt
1-line, 2-address, 3-size, 4-assembly operator

000		0000		0		Data1 segment
001		0000		5		String db 'Hello'
002		0005		1		Val db 10111111b
003		0006		2		Vw dw 1234d
004		0008		4		Vd dd 0d7856fdah
005		000C		0		Data1 ends

006		0000		0		Data2 segment
007		0000		2		Var dw -128
008		0002		4		QWERTY dd 67ff89h
009		0006		1		Zxcv db 0ffh
010		0007		2		x dw 65535
011		0009		0		Data2 ends

012		0000		0		Code1 segment
013		0000		0		Assume cs : Code1 , ds : Data1 , gs : Data2
014		0000		0		begin :
015		0000		2		jmp short label1
016		0002		1		nop
017		0003		1		nop
018		0004		1		nop
019		0005		2		imul eax
020		0007		2		imul bh
021		0009		4		mul byte ptr gs : [ esp + ecx ]
022		000D		4		mul byte ptr ds : [ esp + ecx ]
023		0011		3		mul byte ptr ss : [ esp + ecx ]
024		0014		3		mul byte ptr [ esp + ecx ]
025		0017		2		idiv bl
026		0019		4		or byte ptr ds : [ edx + esi ] , 11111111b
027		001D		3		sub dword ptr [ ebx + ecx ] , eax
028		0020		5		cmp eax , 1A234567h
029		0025		2		jmp short label1
030		0027		0		label1 :
031		0027		2		jmp short label1
032		0029		6		cmp ebx , 'text'
033		002F		6		jnb label2
034		0035		3		adc al , byte ptr [ edx + esi ]
035		0038		3		adc esi , dword ptr [ edx + eax ]
036		003B		2		jmp label1
037		003D		6		jnb label2
038		0043		0		label2 :
039		0043		2		jnb label2
040		0045		2		cmp al , '2'
041		0047		2		jnb label2
042		0049		1		nop
043		004A		1		nop
044		004B		0		Code1 ends

045		0000		0		end

Segment	Size
DATA1	000C
DATA2	0009
CODE1	004B

Name	Type	Address	Segment
String	BYTE	0000	Data1
Val		BYTE	0005	Data1
Vw		WORD	0006	Data1
Vd		DWORD	0008	Data1
Var		WORD	0000	Data2
QWERTY	DWORD	0002	Data2
Zxcv	BYTE	0006	Data2
x		WORD	0007	Data2
begin	NEAR	0000	Code1
label1	NEAR	0027	Code1
label2	NEAR	0043	Code1

Errors: 0